# Copyright 2021 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, static-{charm,lib,unit,integration}, unit

[vars]
src_path = {toxinidir}/src
tst_path = {toxinidir}/tests
lib_path = {toxinidir}/lib/charms/karma_k8s
all_path = {[vars]src_path} {[vars]tst_path} {[vars]lib_path}

[testenv]
basepython = python3
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
  PYTHONBREAKPOINT=ipdb.set_trace
  PY_COLORS=1
passenv =
  PYTHONPATH
  HOME
  PATH
  CHARM_BUILD_DIR
  MODEL_SETTINGS
  HTTP_PROXY
  HTTPS_PROXY
  NO_PROXY

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    ruff
commands =
    ruff --fix {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    ruff
    codespell
commands =
    codespell {[vars]lib_path}
    codespell . --skip .git --skip .tox --skip build --skip lib --skip venv --skip .mypy_cache
    ruff {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:static-{charm,lib,unit,integration}]
description = Run static analysis checks
deps =
    pyright
    charm: -r{toxinidir}/requirements.txt
    lib: -r{toxinidir}/requirements.txt
    unit: {[testenv:unit]deps}
    integration: {[testenv:integration]deps}
commands =
    charm: pyright {[vars]src_path} {posargs}
    lib: pyright --pythonversion 3.8 {[vars]lib_path} {posargs}
    lib: /usr/bin/env sh -c 'for m in $(git diff main --name-only {[vars]lib_path}); do if ! git diff main $m | grep -q "+LIBPATCH\|+LIBAPI"; then echo "You forgot to bump the version on $m!"; exit 1; fi; done'
    unit: pyright {[vars]tst_path}/unit {posargs}
    integration: pyright {[vars]tst_path}/integration {posargs}
allowlist_externals = /usr/bin/env

[testenv:unit]
description = Run unit tests
passenv =
  PYTHONPATH
deps =
    pytest
    coverage[toml]
    -r{toxinidir}/requirements.txt
commands =
    coverage run \
      --source={[vars]src_path},{[vars]lib_path} \
      -m pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tst_path}/unit
    coverage report

[testenv:scenario]
# Placeholder env so CI won't fail.

[testenv:integration]
description = Run integration tests
deps =
    juju
    pytest
    pytest-operator
commands =
    pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tst_path}/integration
